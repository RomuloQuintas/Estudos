# -*- coding: utf-8 -*-
"""EXEMPLOS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17cLVqLNIFxpwGHy5Oa72QJUnDza6rXMq
"""

#exe01
pessoas = {'nome': 'Gustavo', 'sexo': 'M', 'idade': 22}
print(f'O {pessoas["nome"]} tem {pessoas["idade"]} anos.')

pessoas = {'nome': 'Gustavo', 'sexo': 'M', 'idade': 22}
print(pessoas.keys())

#exe02
aluno = {}
aluno['nome'] = str(input('Digite o nome: '))
aluno['media'] = float(input(f'Ola {aluno["nome"]} digite sua media: '))

if aluno['media'] >= 7:
  aluno['situação'] = 'Aprovado'
elif aluno['media'] < 7:
  aluno['situação'] = 'Recuperação'
else:
  aluno['situação'] = 'Reprovado'

#exe03
for k, v in aluno.items():
  print(f' --- {k} é igual a {v}')
from random import randint
from time import sleep
jogo = { 'jogador1': randint(1,6),
        'jogador2': randint(1,6),
        'jogador3': randint(1,6),
        'jogador4': randint(1,6)}

for k, v in jogo.items():
  print(f'{k} tirou {v}')
  sleep(2)

#exe04
def soma(* valores):
  s = 0
  for numero in valores:
    s += numero
  print(f'a soma de tds os valores é {s}')


soma(1, 3, 5, 6)
soma(5, 7, 3, 4)

#exe05
def area(largura, comprimento):
  area_final = largura * comprimento
  print(area_final)

largura = float(input('Digite a largura do terreno: '))
comprimento = float(input('Digite o comprimento do terreno: '))

area(largura, comprimento)

#exe06
def escreva(msg):
  tam = len(msg)
  print('~' * tam)
  print(msg)
  print('~' * tam)

escreva(str(input('Digite a msg: ')))

#exe07
def contador(i, f, p):
  print(f'{i} ate {f} de {p} em {p}')


  if i < f:
    cont = i
    while cont <= f:
      print(f'{cont}', end='')
    cont += p
  print('fim')

  else:
    cont = i
    while cont >= f:

def maior(* num):
  cont = maior = 0
  print('Analizando os valores passados...')
  print('-=' * 20)
  for valor in num:
    print(f'{valor}', end=' ')
    if valor == 0:
      maior = valor
    else:
      if valor > 0:
        maior = valor
    cont += 1
  print(f'foram informados{cont} valores ao todo')
  print(f'O maior valor informado foi {maior}')

maior(1, 4, 7, 8, 9)
maior(3, 5, 6)
maior(1, 9)
maior(8)
maior()

#exe08
from random import randint

def sorteia(lista):
  for cont in range(0, 5):
    lista.append(randint(1, 10))

def somaPar(lista):
  soma = 0
  for valor in lista:
    if valor % 2 == 0:
      soma += valor
  print(f'soma dos numeros pares sorteados é {soma}')
num = []
sorteia(num)
print(num)
somaPar(num)

#exe09
def voto(a):
  atual = 2022
  idade = atual - a
  if idade < 16:
    return print(f'NÃO TEM IDADE PARA VOTAR')
  elif idade >16 and idade < 18:
    return print(f'VOTO NÃO OBRIGATORIO')
  else:
    return print(f'VOTO OBRIGATORIO')

I_V = voto(2002)

#exe10
def perimetro(b, h):
  p = 2 * b + 2 * h
  return p

def area(b,h):
  a = b * h
  return a

base = float(input('Informe a base: '))
altura = float(input('Informe a altura: '))

per = perimetro(base, altura)
are = area(base, altura)

print('O periemtro é {} e a area é {}'.format(per, are))

#exe11
pessoas = {}
p = []
for i in range(0,3):
  pessoas['pessoa1'] = input('Digite uma cor')


print(pessoas)

# #DECLARANDO PALAVRA E TRANSFORMEI ME MAIUSCULA
 palavra = 'Romulo'.upper()

# #CONTABILIZANDO ERROS
 cont_erros = 0

# #CONJUNTO DE LETRAS DA PALAVRA
 conjunto_letras_palavra = set(palavra)#A FUNCAO SET TRANSFORTA AS LETRAS DE PALAVRA EM CONJUNTO
# #CONJUNTO DE LETRAS DIGITADAS PELO USUARIO
 conjunto_letras_digitadas = set()#a FUNCAO SET VAZIA E RECEBERAR LETRAS DIGITADS E TRANSFORMARA EM CONJUNTO

# #PISTA DE QUANTIDADE DE PALAVRA
 print('A palabra é: ', end='' )#STR DE APRESENTACAO E NAO PULA LINHA
 for letra in palavra:#PARA CADA LETRA EM PALAVRA MOSTRA "_"
  print(f'_ ', end='')#(PISTA QUANTIDADE DE LETRAS)

# #EM QUANTO NÃO CONTER O CONJUNTO DE LETRAS DA PALAVRA EM CONJUNTODE LETRAS DIGITADAS
# #E O CONTADOR DE ERROS MENOR QUE 7 CONTINUE
 while (not conjunto_letras_palavra.issubset(conjunto_letras_digitadas)) and cont_erros <7:

   letra_digitada = input('Digite uma letra: ').upper()#PEDE UMA LETRA PARA O USUARIO E TRANSFORMA EM MAIUSCULA
   conjunto_letras_digitadas.add(letra_digitada)#EM SEGUIDA ADICIONA A LETRA EM CONJUNTO DE LETRAS DIGITADAS

#   #TESTE DA LETRA DIGITADA PELO USUARIO
   if letra_digitada in conjunto_letras_palavra:#SE LETRA DIGITADA ESTIVER EM CONJUNTO DE LETRAS DA PALAVRA

     print('A palabra é: ', end='' )#PRINT DE APRESENTACAO (NAO PULA LINHA)
     for letra in palavra:#VERIFIQUE CADA LETRA EM PALAVRA
       if letra in conjunto_letras_digitadas:#SE A LETRA ESTIVER EM CONJUNTO DE LETRAS DIGITADAS
         print(f'{letra} ', end='')#PRINT A LETRA SE ESTIVER EM PALAVRA (NAO PULA LINHA)
       else:
         print('_ ', end='')#PRINT ANDERLINE SE A LETRA N ESTIVER EM PALVRA (NAO PULA LINHA)

   else:#SE A LETRA DIGITADA NAO ESTIVER EM PALAVRA

     cont_erros += 1#ADICIONE +1 NO CONTADOR DE ERROS
     print(f'Erros {cont_erros} de 6. Tente novamente')#E PRINT A QUANTIDADE DE ERROS
   print('Letras digitadas: ', conjunto_letras_digitadas)#PRINT A LETRAS JA DIGITADAS

 n = int(input('Digite: '))#Pediu ao usuario um numero inteiro
 m = 1 #Define em 1 a variavel de quantidade de numeros para todas as linhas

 for c in range(1, n+1): #Loop de 1 á quantidade de linhas digitadas pelo usuario
   for i in range(1, c+1): #Loop de 1 á quantidade de num
     print(m, end=' ')
     m += 1
   print()

 l1 = [1,2,3,4]
 l2 = []
 for i in range(len(l1)):
   contador = 0
   for j in range(i+1):
     contador += l1[j]
   l2.append(contador)
 print(l2)
 print('Oeee')
cont
for i